{
	"info": {
		"_postman_id": "837100f7-a3cb-4b5b-ba0b-5ab3488067e0",
		"name": "expenses",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14595617"
	},
	"item": [
		{
			"name": "create expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expense = JSON.parse(responseBody);",
							"console.log(expense);",
							"postman.setEnvironmentVariable(\"LATEST_EXPENSED_ID\", expense.id);",
							"",
							"",
							"pm.test(\"should response success(201) and object of customer\", function () {",
							"    var response = pm.response.json();",
							"    pm.expect(response.id).to.not.eql(0);",
							"    pm.expect(response.title).to.eql(\"strawberry smoothie\");",
							"    pm.expect(response.amount).to.eql(79);",
							"    pm.expect(response.note).to.eql(\"night market promotion discount 10 bath\");",
							"    pm.expect(response.tags).to.eql([\"food\", \"beverage\"]);",
							"});",
							"",
							"pm.test(\"Status code is 201 or 202\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "November 10, 2009",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"strawberry smoothie\",\n    \"amount\": 79,\n    \"note\": \"night market promotion discount 10 bath\", \n    \"tags\": [\"food\", \"beverage\"]\n}"
				},
				"url": {
					"raw": "http://localhost:2565/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "2565",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "get latest expense (expenses/:id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should response object of latest expense\", function () {",
							"    var id = pm.environment.get(\"LATEST_EXPENSED_ID\");",
							"    ",
							"    var expense = pm.response.json();",
							"    pm.expect(expense.id.toString()).to.not.eq(\"\")",
							"    pm.expect(expense.title).to.not.eql(\"\", \"titile should not be empty\");",
							"    pm.expect(expense.amount).to.not.eql(0, \"amount should not be zero\");",
							"    pm.expect(expense.note).to.not.eql(\"\", \"note should not be empty\");",
							"    pm.expect(expense.tags.length).to.be.above(0, \"tags should not be empty\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "November 10, 2009"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:2565/expenses/{{LATEST_EXPENSED_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "2565",
					"path": [
						"expenses",
						"{{LATEST_EXPENSED_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update latest expenses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should response success(200) and object of customer\", function () {",
							"    var id = pm.environment.get(\"LATEST_EXPENSED_ID\");",
							"    ",
							"    var expense = pm.response.json();",
							"    pm.expect(expense.id.toString()).to.eq(id.toString())",
							"    pm.expect(expense.title).to.eql(\"apple smoothie\", \"titile should be apple smoothie\");",
							"    pm.expect(expense.amount).to.eql(89, \"amount should be 89\");",
							"    pm.expect(expense.note).to.eql(\"no discount\", \"note should be no discount\");",
							"    pm.expect(expense.tags.length).to.be.eq(1, \"tags should be [beverage]\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "November 10, 2009"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": {{LATEST_EXPENSED_ID}},\n    \"title\": \"apple smoothie\",\n    \"amount\": 89,\n    \"note\": \"no discount\",\n    \"tags\": [\"beverage\"]\n}"
				},
				"url": {
					"raw": "http://localhost:2565/expenses/{{LATEST_EXPENSED_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "2565",
					"path": [
						"expenses",
						"{{LATEST_EXPENSED_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all expenses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should response success(200) and object of latest expense\", function () {",
							"    var allCustomers = pm.response.json();",
							"    var len = allCustomers.length;",
							"    ",
							"    pm.expect(len).to.be.above(0, \"expenses should not be empty\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "November 10, 2009"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:2565/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "2565",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bonus middleware check Autorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 Unauthorized\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "November 10, 2009wrong_token"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:2565/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "2565",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		}
	]
}